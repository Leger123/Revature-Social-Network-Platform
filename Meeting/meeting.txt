1. Deploy Tools: Docker
     1.1 AWS EC2: link
     1.2 Docker: 
	  backend: dockerfile: from tomcat
     1.3 nohub ng serve &

2. Frontend: Angular
     2.1 How many pages do we want?
          (Andrew) login, (Kevin) dashboard, register, update, profile
     2.2 Component -- declaration
          (Zimi) navbar
          (Andrew) login: login
          (Kevin) dashborad: create-feed, display-feed, search
          register: register-user
          update: update-user
	  profile: view-profile
	  notification?
          comment?
     2.3 Import:
          HttpClientModule, FormModule
     2.4 Service:
          api -- figure it out

// git checkout master, git pull, git checkout OWN_BRANCH, git merge master

// ng new, ng g c, ng g s
// npm install
	
3. Backend: Java
     3.1 Models:
          User: id (PK), username (unique), password, name, birthday?, email, profile image, gender?
          Feed: id (PK), body, image(s), videourl?, List<User> likes, List<Comment> comments?, dateCreated, author (User)
	  Comment?: body, User
     3.2 Pom.xml:
	  bcrypt: 0.9.0
          log4j:  1.2.17
          javax.mail: 1.6.2
          postgresql: 42.2.18
          jackson-databind?: 2.12.3
          mockito-core?: 2.22.0
          H2: 1.4.200
     3.3 log4j.properties:
	  MODIFY: log4j.appender.file.File = error.log
     3.4 package:
          (Zimi) models: User, Feed, JSONResponse(Boolean status, String message, Object data)
          repository: (Bhavani) UserDao, (Bhavani) UserDaoImpl, (Andrew) FeedDao, (Andrew) FeedDaoImpl
          service: (Bhavani) UserSerivce, (Andrew) FeedService
          controller: (Kevin) UserController, (Kevin) FeedController, (Zimi) ImageController
         

4. Database: Amazon RDS
     4.1 Which ORM are we using?
	Hibernate(Spring ORM)
     
5. Test
     5.1 H2: jdbc:h2:LOCATION 
     5.2 Jasmin
     5.3 

6. api endpoints
     6.1 user
        6.1.1 register    	POST user                
        6.1.2 login       	POST login
        6.1.3 logout      	GET logout
        6.1.4 reset password    PATCH user/password/{email}
        6.1.5 update info       PUT user
        6.1.6 upload profileImg PATCH user/profile/{imgUrl}
        6.1.7 search people     GET user
        6.1.8 view profile      GET user/{id}
     6.2 feed
	6.2.1 create feed       POST feed
	6.2.2 view all feed     GET feed/{offset}
	6.2.3 like a feed       PATCH feed/{id}
     6.3 session: "User" (user)


Next Meet: Next Thu Sep 10

